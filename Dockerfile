# ───────────────────────────────────────────────────────────────────────────
# 1. Первый этап: сборка с помощью Maven (Java 17)
# ───────────────────────────────────────────────────────────────────────────
FROM maven:3.9.0-eclipse-temurin-17 AS builder

# Рабочая директория внутри контейнера
WORKDIR /build

# Сначала копируем только pom.xml, чтобы слои с загрузкой зависимостей кэшировались
COPY pom.xml ./

# Загружаем все зависимости в оффлайн-режиме (слой закэшируется до изменения pom.xml)
RUN mvn dependency:go-offline -B

# Копируем исходники проекта
COPY src ./src

# Собираем jar (тут можно указать -DskipTests, чтобы пропустить тесты в контейнере)
RUN mvn clean package -DskipTests -B

# После этого в /build/target/ появится ваш собранный JAR-файл:
#   target/<artifactId>-<version>.jar
# ───────────────────────────────────────────────────────────────────────────
# 2. Второй этап: «легковесный» образ для запуска (Java 17 JRE)
# ───────────────────────────────────────────────────────────────────────────
FROM amazoncorretto:17

# Создаём директорию для приложения
WORKDIR /bank-card

# Копируем собранный JAR из этапа builder
COPY --from=builder /build/target/bank-card-*.jar ./app.jar

# Копируем скрипт-энрипоинт
COPY ./entrypoint.sh ./entrypoint.sh

# Делаем скрипт исполняемым
RUN chmod +x ./entrypoint.sh

# По умолчанию запускаем entrypoint
ENTRYPOINT ["./entrypoint.sh"]
